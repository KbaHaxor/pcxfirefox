# HG changeset patch
# User xunxun1982@gmail.com
# Date 1430012847 -28800
#      Sun Apr 26 09:47:27 2015 +0800
# Node ID e7dcb8acf49122fb8888aadd8392cdfa5a727574
# Parent  3c40a172a12f120639bab4bc25e92f71a00c57c5
autopgo

diff --git a/Makefile.in b/Makefile.in
--- a/Makefile.in
+++ b/Makefile.in
@@ -301,16 +301,19 @@ else
 maybe_clobber_profiledbuild:
 endif
 else
 maybe_clobber_profiledbuild:
 	$(RM) $(DIST)/bin/*.pgc
 	find $(DIST)/$(MOZ_APP_NAME) -name '*.pgc' -exec mv {} $(DIST)/bin \;
 endif
 
+pgo-profile-run:
+	$(PYTHON) $(topsrcdir)/build/pgo/profileserver.py $(EXTRA_TEST_ARGS)
+
 .PHONY: maybe_clobber_profiledbuild
 
 # Look for R_386_PC32 relocations in shared libs, these
 # break x86_64 builds and SELinux users.
 ifeq ($(OS_TARGET)_$(TARGET_XPCOM_ABI),Linux_x86-gcc3)
 check::
 	@relcount=`find $(DIST)/bin -name '*.so' | xargs objdump -R | grep R_386_PC32 | wc -l` && if test $$relcount -gt 0; then echo 'FAILED: R_386_PC32 relocations detected in a shared library.  Did you use a system header without adding it to config/system-headers?'; exit 1; else echo 'PASSED'; fi
 endif
diff --git a/build/pgo/index.html b/build/pgo/index.html
--- a/build/pgo/index.html
+++ b/build/pgo/index.html
@@ -33,17 +33,17 @@
   "js-input/sunspider/math-spectral-norm.html",
   "js-input/sunspider/regexp-dna.html",
   "js-input/sunspider/string-base64.html",
   "js-input/sunspider/string-fasta.html",
   "js-input/sunspider/string-tagcloud.html",
   "js-input/sunspider/string-unpack-code.html",
   "js-input/sunspider/string-validate-input.html"
      ];
- var interval = 1000;
+ var interval = 6000;
  var idx = 0;
  var w;
  
  window.onload = function () {
      w = window.open("about:blank");
      window.setTimeout(loadURL, interval); 
  };
  function loadURL () {
diff --git a/build/pgo/profileserver.py b/build/pgo/profileserver.py
--- a/build/pgo/profileserver.py
+++ b/build/pgo/profileserver.py
@@ -63,17 +63,17 @@ if __name__ == '__main__':
       if os.path.exists(vc12dir):
         env["PATH"] = vc12dir + ";" + env["PATH"]
 
     jarlog = os.getenv("JARLOG_FILE")
     if jarlog:
       env["MOZ_JAR_LOG_FILE"] = os.path.abspath(jarlog)
       print "jarlog: %s" % env["MOZ_JAR_LOG_FILE"]
 
-    cmdargs = ["http://localhost:%d/index.html" % PORT]
+    cmdargs = ["http://127.0.0.1:%d/index.html" % PORT]
     runner = FirefoxRunner(profile=profile,
                            binary=build.get_binary_path(where="staged-package"),
                            cmdargs=cmdargs,
                            env=env)
     runner.start(debug_args=debug_args, interactive=interactive)
     runner.wait()
     httpd.stop()
   finally:
